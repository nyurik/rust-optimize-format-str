libtest::my_test_func_with_simple_str:
		// /home/nyurik/dev/rust/temp/rust-optimize-format-str/str/src/lib.rs : 7
		pub fn my_test_func_with_simple_str(buffer: &mut String) -> core::fmt::Result {
	push rbx
		// /home/nyurik/dev/rust/rust/library/alloc/src/raw_vec.rs : 248
		if T::IS_ZST { usize::MAX } else { self.cap.0 }
	mov rax, qword ptr [rdi]
		// /home/nyurik/dev/rust/rust/library/alloc/src/vec/mod.rs : 911
		self.buf.reserve(self.len, additional);
	mov rsi, qword ptr [rdi + 16]
		// /home/nyurik/dev/rust/rust/library/core/src/num/mod.rs : 1281
		uint_impl! {
	sub rax, rsi
		// /home/nyurik/dev/rust/rust/library/alloc/src/raw_vec.rs : 392
		additional > self.capacity().wrapping_sub(len)
	cmp rax, 19
		// /home/nyurik/dev/rust/rust/library/alloc/src/raw_vec.rs : 309
		if self.needs_to_grow(len, additional) {
	jbe .LBB2_1
.LBB2_2:
		// /home/nyurik/dev/rust/rust/library/alloc/src/raw_vec.rs : 235
		self.ptr.as_ptr()
	mov rax, qword ptr [rdi + 8]
		// /home/nyurik/dev/rust/rust/library/core/src/intrinsics.rs : 2922
		copy_nonoverlapping(src, dst, count)
	movups xmm0, xmmword ptr [rip + .L__unnamed_1]
	movups xmmword ptr [rax + rsi], xmm0
	mov dword ptr [rax + rsi + 16], 1735289202
		// /home/nyurik/dev/rust/rust/library/alloc/src/vec/mod.rs : 2040
		self.len += count;
	add rsi, 20
	mov qword ptr [rdi + 16], rsi
		// /home/nyurik/dev/rust/temp/rust-optimize-format-str/str/src/lib.rs : 9
		}
	xor eax, eax
	pop rbx
	ret
.LBB2_1:
		// /home/nyurik/dev/rust/rust/library/alloc/src/raw_vec.rs : 310
		do_reserve_and_handle(self, len, additional);
	mov edx, 20
	mov rbx, rdi
	call alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
	mov rdi, rbx
		// /home/nyurik/dev/rust/rust/library/alloc/src/vec/mod.rs : 2148
		self.len
	mov rsi, qword ptr [rbx + 16]
	jmp .LBB2_2
