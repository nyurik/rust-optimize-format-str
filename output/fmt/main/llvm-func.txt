; libtest::my_test_func
; Function Attrs: nonlazybind uwtable
define noundef zeroext i1 @libtest::my_test_func(ptr noalias noundef align 8 dereferenceable(24) %buffer, i32 noundef %0) unnamed_addr #0 {
start:
  %_7 = alloca [1 x %"core::fmt::rt::Argument<'_>"], align 8
  %args = alloca %"core::fmt::Arguments<'_>", align 8
  %value = alloca i32, align 4
  store i32 %0, ptr %value, align 4
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %args)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %_7)
  store ptr %value, ptr %_7, align 8
  %1 = getelementptr inbounds i8, ptr %_7, i64 8
  store ptr @"core::fmt::num::imp::<impl core::fmt::Display for i32>::fmt", ptr %1, align 8
  store ptr @alloc_d6cc9c75158bbcf20176688a556567dd, ptr %args, align 8
  %2 = getelementptr inbounds i8, ptr %args, i64 8
  store i64 2, ptr %2, align 8
  %3 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %args, i64 0, i32 2
  store ptr null, ptr %3, align 8
  %4 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %args, i64 0, i32 1
  store ptr %_7, ptr %4, align 8
  %5 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %args, i64 0, i32 1, i32 1
  store i64 1, ptr %5, align 8
; call core::fmt::write
  %_0 = call noundef zeroext i1 @core::fmt::write(ptr noundef nonnull align 1 %buffer, ptr noalias noundef nonnull readonly align 8 dereferenceable(24) @vtable.1, ptr noalias nocapture noundef nonnull readonly align 8 dereferenceable(48) %args)
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %args)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %_7)
  ret i1 %_0
}
